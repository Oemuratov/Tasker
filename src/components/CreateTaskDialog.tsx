"use client";
import * as React from "react";
import { Button } from "@/components/ui/button";
import { Dialog, DialogFooter, DialogHeader } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select } from "@/components/ui/select";
import { useBoardStore } from "@/store/useBoardStore";
import type { TaskData, TaskType } from "@/types/board";
import { useViewport } from "reactflow";
import { centerPosition } from "@/lib/graph";

const defaultData: TaskData = {
  title: "",
  description: "",
  difficulty: "—Å—Ä–µ–¥–Ω–µ",
  taskType: "–î—Ä—É–≥–æ–µ",
};

export function CreateTaskDialog() {
  const [open, setOpen] = React.useState(false);
  const [data, setData] = React.useState<TaskData>(defaultData);
  const addNode = useBoardStore((s) => s.addNode);
  const viewport = useViewport();

  const onSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!data.title.trim()) return;
    const pos = centerPosition(viewport);
    addNode({ ...data, description: data.description?.trim() || undefined }, pos);
    setOpen(false);
    setData(defaultData);
  };

  return (
    <>
      <Button
        aria-label="–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"
        className="fixed bottom-6 right-6 shadow-lg"
        onClick={() => setOpen(true)}
      >
        –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
      </Button>
      <Dialog open={open} onOpenChange={setOpen}>
        <form onSubmit={onSubmit}>
          <DialogHeader>–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞</DialogHeader>
          <div className="grid gap-3">
            <label className="text-sm font-medium text-slate-700">
              –¢–∏–ø –∑–∞–¥–∞—á–∏
              <Select
                className="mt-1"
                value={data.taskType}
                onValueChange={(v) => setData((d) => ({ ...d, taskType: v as TaskType }))}
                options={[
                  { value: "–ö–æ–¥", label: "üíª –ö–æ–¥" },
                  { value: "–ê—Ä—Ç", label: "üé® –ê—Ä—Ç" },
                  { value: "–ó–≤—É–∫", label: "üîä –ó–≤—É–∫" },
                  { value: "–ü–æ–ª–∏—Ä–æ–≤–∫–∞", label: "‚ú® –ü–æ–ª–∏—Ä–æ–≤–∫–∞" },
                  { value: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", label: "üì£ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥" },
                  { value: "–î—Ä—É–≥–æ–µ", label: "üß© –î—Ä—É–≥–æ–µ" },
                ]}
              />
            </label>
            <label className="text-sm font-medium text-slate-700">
              –ù–∞–∑–≤–∞–Ω–∏–µ
              <Input
                aria-label="–ù–∞–∑–≤–∞–Ω–∏–µ"
                className="mt-1"
                required
                value={data.title}
                onChange={(e) => setData((d) => ({ ...d, title: e.target.value }))}
              />
            </label>
            <label className="text-sm font-medium text-slate-700">
              –û–ø–∏—Å–∞–Ω–∏–µ
              <Textarea
                aria-label="–û–ø–∏—Å–∞–Ω–∏–µ"
                className="mt-1"
                value={data.description}
                onChange={(e) => setData((d) => ({ ...d, description: e.target.value }))}
              />
            </label>
            <label className="text-sm font-medium text-slate-700">
              –°–ª–æ–∂–Ω–æ—Å—Ç—å
              <Select
                className="mt-1"
                value={data.difficulty}
                onValueChange={(v) => setData((d) => ({ ...d, difficulty: v as TaskData["difficulty"] }))}
                options={[
                  { value: "–ª–µ–≥–∫–æ", label: "–ª–µ–≥–∫–æ" },
                  { value: "—Å—Ä–µ–¥–Ω–µ", label: "—Å—Ä–µ–¥–Ω–µ" },
                  { value: "—Å–ª–æ–∂–Ω–æ", label: "—Å–ª–æ–∂–Ω–æ" },
                ]}
              />
            </label>
          </div>
          <DialogFooter>
            <Button type="button" variant="secondary" onClick={() => setOpen(false)} aria-label="–û—Ç–º–µ–Ω–∏—Ç—å">
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button type="submit" aria-label="–°–æ–∑–¥–∞—Ç—å">–°–æ–∑–¥–∞—Ç—å</Button>
          </DialogFooter>
        </form>
      </Dialog>
    </>
  );
}
