"use client";
import * as React from "react";
import { Button } from "@/components/ui/button";
import { Dialog, DialogFooter, DialogHeader } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select } from "@/components/ui/select";
import { useBoardStore } from "@/store/useBoardStore";
import type { TaskData, TaskType } from "@/types/board";

export function EditTaskDialog({
  open,
  onOpenChange,
  nodeId,
  initial,
}: {
  open: boolean;
  onOpenChange: (v: boolean) => void;
  nodeId: string;
  initial: TaskData;
}) {
  const updateNode = useBoardStore((s) => s.updateNode);
  const removeNode = useBoardStore((s) => s.removeNode);
  const [data, setData] = React.useState<TaskData>(initial);

  React.useEffect(() => setData(initial), [initial]);

  const onSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!data.title.trim()) return;
    updateNode(nodeId, {
      title: data.title.trim(),
      description: data.description?.trim() || undefined,
      difficulty: data.difficulty,
      taskType: data.taskType,
    });
    onOpenChange(false);
  };

  const onDelete = () => {
    removeNode(nodeId);
    onOpenChange(false);
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <form onSubmit={onSubmit}>
        <DialogHeader>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É</DialogHeader>
        <div className="grid gap-3">
          <label className="text-sm font-medium text-slate-700">
            –¢–∏–ø –∑–∞–¥–∞—á–∏
            <Select
              className="mt-1"
              value={data.taskType}
              onValueChange={(v) => setData((d) => ({ ...d, taskType: v as TaskType }))}
              options={[
                { value: "–ö–æ–¥", label: "üíª –ö–æ–¥" },
                { value: "–ê—Ä—Ç", label: "üé® –ê—Ä—Ç" },
                { value: "–ó–≤—É–∫", label: "üîä –ó–≤—É–∫" },
                { value: "–ü–æ–ª–∏—Ä–æ–≤–∫–∞", label: "‚ú® –ü–æ–ª–∏—Ä–æ–≤–∫–∞" },
                { value: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", label: "üì£ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥" },
                { value: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", label: "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" },
                { value: "–ö–æ–Ω—Ç–µ–Ω—Ç", label: "‚úçÔ∏è –ö–æ–Ω—Ç–µ–Ω—Ç" },
                { value: "–î—Ä—É–≥–æ–µ", label: "üß© –î—Ä—É–≥–æ–µ" },
              ]}
            />
          </label>
          <label className="text-sm font-medium text-slate-700">
            –ù–∞–∑–≤–∞–Ω–∏–µ
            <Input
              aria-label="–ù–∞–∑–≤–∞–Ω–∏–µ"
              className="mt-1"
              required
              value={data.title}
              onChange={(e) => setData((d) => ({ ...d, title: e.target.value }))}
            />
          </label>
          <label className="text-sm font-medium text-slate-700">
            –û–ø–∏—Å–∞–Ω–∏–µ
            <Textarea
              aria-label="–û–ø–∏—Å–∞–Ω–∏–µ"
              className="mt-1"
              value={data.description}
              onChange={(e) => setData((d) => ({ ...d, description: e.target.value }))}
            />
          </label>
          <label className="text-sm font-medium text-slate-700">
            –°–ª–æ–∂–Ω–æ—Å—Ç—å
            <Select
              className="mt-1"
              value={data.difficulty}
              onValueChange={(v) => setData((d) => ({ ...d, difficulty: v as TaskData["difficulty"] }))}
              options={[
                { value: "–ª–µ–≥–∫–æ", label: "–ª–µ–≥–∫–æ" },
                { value: "—Å—Ä–µ–¥–Ω–µ", label: "—Å—Ä–µ–¥–Ω–µ" },
                { value: "—Å–ª–æ–∂–Ω–æ", label: "—Å–ª–æ–∂–Ω–æ" },
              ]}
            />
          </label>
        </div>
        <DialogFooter>
          <Button type="button" variant="destructive" onClick={onDelete} aria-label="–£–¥–∞–ª–∏—Ç—å">
            –£–¥–∞–ª–∏—Ç—å
          </Button>
          <Button type="button" variant="secondary" onClick={() => onOpenChange(false)} aria-label="–û—Ç–º–µ–Ω–∏—Ç—å">
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button type="submit" aria-label="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
        </DialogFooter>
      </form>
    </Dialog>
  );
}
